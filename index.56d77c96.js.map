{"mappings":"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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-8281a9a01481da11.js","app.js","node_modules/@parcel/runtime-js/lib/runtime-55407ccca66fb0b9.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $f5723e21c74c8311$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse(\"[\\\"7Gx3W\\\",\\\"index.56d77c96.js\\\",\\\"LVq70\\\",\\\"service-worker.016ce8d9.js\\\"]\"));\n\n\nvar $6FvfU = parcelRequire(\"6FvfU\");\n\nvar $ilpIi = parcelRequire(\"ilpIi\");\n// Form elements\nconst $6b17f08f738443dc$var$form = document.getElementById('transactionForm');\nconst $6b17f08f738443dc$var$descriptionInput = document.getElementById('description');\nconst $6b17f08f738443dc$var$amountInput = document.getElementById('amount');\nconst $6b17f08f738443dc$var$categoryInput = document.getElementById('category');\nconst $6b17f08f738443dc$var$transactionList = document.getElementById('transactionList');\nconst $6b17f08f738443dc$var$totalIncome = document.getElementById('totalIncome');\nconst $6b17f08f738443dc$var$totalExpenses = document.getElementById('totalExpenses');\nconst $6b17f08f738443dc$var$balance = document.getElementById('balance');\n// 🚀 Add Transaction\n$6b17f08f738443dc$var$form.addEventListener('submit', async (e)=>{\n    e.preventDefault();\n    const description = $6b17f08f738443dc$var$sanitizeInput($6b17f08f738443dc$var$descriptionInput.value);\n    const amount = parseFloat($6b17f08f738443dc$var$amountInput.value);\n    const category = $6b17f08f738443dc$var$categoryInput.value;\n    if (description && amount && category) try {\n        await (0, $ilpIi.addDoc)((0, $ilpIi.collection)((0, $6FvfU.db), 'transactions'), {\n            description: description,\n            amount: amount,\n            category: category,\n            date: new Date().toISOString()\n        });\n        console.log(\"Transaction added successfully!\");\n        $6b17f08f738443dc$var$form.reset();\n    } catch (error) {\n        console.error(\"Error adding transaction: \", error);\n    }\n    else alert(\"Please fill out all fields.\");\n});\n// Render Transactions\nfunction $6b17f08f738443dc$var$renderTransactions() {\n    (0, $ilpIi.onSnapshot)((0, $ilpIi.collection)((0, $6FvfU.db), 'transactions'), (snapshot)=>{\n        let income = 0;\n        let expenses = 0;\n        $6b17f08f738443dc$var$transactionList.innerHTML = '';\n        snapshot.forEach((doc)=>{\n            const { description: description, amount: amount, category: category } = doc.data();\n            // Create list item\n            const li = document.createElement('li');\n            // Transaction details\n            li.innerHTML = `\n                <div class=\"transaction-details\">\n                    <span>${description} - $${amount} (${category})</span>\n                </div>\n                <div class=\"transaction-actions\">\n                    <button class=\"edit-btn\" onclick=\"editTransaction('${doc.id}', '${description}', ${amount}, '${category}')\">Edit</button>\n                    <button class=\"delete-btn\" onclick=\"deleteTransaction('${doc.id}')\">Delete</button>\n                </div>\n            `;\n            // Update totals\n            if (category === 'Income') income += amount;\n            else expenses += amount;\n            $6b17f08f738443dc$var$transactionList.appendChild(li);\n        });\n        // Update summary\n        $6b17f08f738443dc$var$totalIncome.textContent = `$${income}`;\n        $6b17f08f738443dc$var$totalExpenses.textContent = `$${expenses}`;\n        $6b17f08f738443dc$var$balance.textContent = `$${income - expenses}`;\n    });\n}\n// Edit Transaction\nwindow.editTransaction = (id, description, amount, category)=>{\n    const newDescription = prompt(\"Edit description:\", description);\n    const newAmount = parseFloat(prompt(\"Edit amount:\", amount));\n    const newCategory = prompt(\"Edit category:\", category);\n    if (newDescription && !isNaN(newAmount) && newCategory) $6b17f08f738443dc$var$updateTransaction(id, newDescription, newAmount, newCategory);\n    else alert(\"Invalid input. Please try again.\");\n};\nasync function $6b17f08f738443dc$var$updateTransaction(id, description, amount, category) {\n    const transactionRef = (0, $ilpIi.doc)((0, $6FvfU.db), 'transactions', id);\n    try {\n        await (0, $ilpIi.updateDoc)(transactionRef, {\n            description: description,\n            amount: amount,\n            category: category,\n            date: new Date().toISOString()\n        });\n        alert(\"Transaction updated successfully!\");\n    } catch (error) {\n        console.error(\"Error updating transaction:\", error);\n    }\n}\n// Fetch All Transactions (getDocs)\nasync function $6b17f08f738443dc$var$fetchAllTransactions() {\n    const querySnapshot = await (0, $ilpIi.getDocs)((0, $ilpIi.collection)((0, $6FvfU.db), 'transactions'));\n    querySnapshot.forEach((doc)=>{\n        console.log(`${doc.id} => ${JSON.stringify(doc.data())}`);\n    });\n}\n// Delete Transaction\nwindow.deleteTransaction = async (id)=>{\n    if (confirm(\"Are you sure you want to delete this transaction?\")) try {\n        await (0, $ilpIi.deleteDoc)((0, $ilpIi.doc)((0, $6FvfU.db), 'transactions', id));\n        alert(\"Transaction deleted.\");\n    } catch (error) {\n        alert(\"Error deleting transaction:\", error);\n    }\n};\n// Sanitize Input\nfunction $6b17f08f738443dc$var$sanitizeInput(input) {\n    const div = document.createElement(\"div\");\n    div.textContent = input;\n    return div.innerHTML.trim();\n}\nvar $9b58f915dd881523$exports = {};\n$9b58f915dd881523$exports = new URL(\"service-worker.016ce8d9.js\", import.meta.url).toString();\n\n\n// ⚙️ Service Worker Registration\nconst $6b17f08f738443dc$var$sw = new URL($9b58f915dd881523$exports);\nif ('serviceWorker' in navigator) navigator.serviceWorker.register($6b17f08f738443dc$var$sw.href, {\n    scope: '/BudgetPlanner-WT/'\n}).then(()=>console.log('Service Worker Registered')).catch((err)=>console.error('Service Worker Error:', err));\n// Initialize App\n$6b17f08f738443dc$var$renderTransactions();\n\n\n//# sourceMappingURL=index.56d77c96.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"7Gx3W\\\",\\\"index.56d77c96.js\\\",\\\"LVq70\\\",\\\"service-worker.016ce8d9.js\\\"]\"));","import { db } from './firebase.js';\nimport { collection, addDoc, updateDoc, getDocs, deleteDoc, doc, onSnapshot } from 'firebase/firestore';\n\n// Form elements\nconst form = document.getElementById('transactionForm');\nconst descriptionInput = document.getElementById('description');\nconst amountInput = document.getElementById('amount');\nconst categoryInput = document.getElementById('category');\nconst transactionList = document.getElementById('transactionList');\nconst totalIncome = document.getElementById('totalIncome');\nconst totalExpenses = document.getElementById('totalExpenses');\nconst balance = document.getElementById('balance');\n\n// 🚀 Add Transaction\nform.addEventListener('submit', async (e) => {\n    e.preventDefault();\n\n    const description = sanitizeInput(descriptionInput.value);\n    const amount = parseFloat(amountInput.value);\n    const category = categoryInput.value;\n\n    if (description && amount && category) {\n        try {\n            await addDoc(collection(db, 'transactions'), {\n                description,\n                amount,\n                category,\n                date: new Date().toISOString()\n            });\n\n            console.log(\"Transaction added successfully!\");\n            form.reset();\n        } catch (error) {\n            console.error(\"Error adding transaction: \", error);\n        }\n    } else {\n        alert(\"Please fill out all fields.\");\n    }\n});\n\n// Render Transactions\nfunction renderTransactions() {\n    onSnapshot(collection(db, 'transactions'), (snapshot) => {\n        let income = 0;\n        let expenses = 0;\n        transactionList.innerHTML = '';\n\n        snapshot.forEach((doc) => {\n            const { description, amount, category } = doc.data();\n\n            // Create list item\n            const li = document.createElement('li');\n\n            // Transaction details\n            li.innerHTML = `\n                <div class=\"transaction-details\">\n                    <span>${description} - $${amount} (${category})</span>\n                </div>\n                <div class=\"transaction-actions\">\n                    <button class=\"edit-btn\" onclick=\"editTransaction('${doc.id}', '${description}', ${amount}, '${category}')\">Edit</button>\n                    <button class=\"delete-btn\" onclick=\"deleteTransaction('${doc.id}')\">Delete</button>\n                </div>\n            `;\n\n            // Update totals\n            if (category === 'Income') {\n                income += amount;\n            } else {\n                expenses += amount;\n            }\n\n            transactionList.appendChild(li);\n        });\n\n        // Update summary\n        totalIncome.textContent = `$${income}`;\n        totalExpenses.textContent = `$${expenses}`;\n        balance.textContent = `$${income - expenses}`;\n    });\n}\n\n// Edit Transaction\nwindow.editTransaction = (id, description, amount, category) => {\n    const newDescription = prompt(\"Edit description:\", description);\n    const newAmount = parseFloat(prompt(\"Edit amount:\", amount));\n    const newCategory = prompt(\"Edit category:\", category);\n\n    if (newDescription && !isNaN(newAmount) && newCategory) {\n        updateTransaction(id, newDescription, newAmount, newCategory);\n    } else {\n        alert(\"Invalid input. Please try again.\");\n    }\n};\n\nasync function updateTransaction(id, description, amount, category) {\n    const transactionRef = doc(db, 'transactions', id);\n\n    try {\n        await updateDoc(transactionRef, {\n            description,\n            amount,\n            category,\n            date: new Date().toISOString()\n        });\n\n        alert(\"Transaction updated successfully!\");\n    } catch (error) {\n        console.error(\"Error updating transaction:\", error);\n    }\n}\n\n// Fetch All Transactions (getDocs)\nasync function fetchAllTransactions() {\n    const querySnapshot = await getDocs(collection(db, 'transactions'));\n    querySnapshot.forEach((doc) => {\n        console.log(`${doc.id} => ${JSON.stringify(doc.data())}`);\n    });\n}\n\n// Delete Transaction\nwindow.deleteTransaction = async (id) => {\n    if (confirm(\"Are you sure you want to delete this transaction?\")) {\n        try {\n            await deleteDoc(doc(db, 'transactions', id));\n            alert(\"Transaction deleted.\");\n        } catch (error) {\n            alert(\"Error deleting transaction:\", error);\n        }\n    }\n};\n\n// Sanitize Input\nfunction sanitizeInput(input) {\n    const div = document.createElement(\"div\");\n    div.textContent = input;\n    return div.innerHTML.trim();\n}\n\n// ⚙️ Service Worker Registration\nconst sw = new URL('service-worker.js', import.meta.url);\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register(sw.href, { scope: '/BudgetPlanner-WT/' })\n        .then(() => console.log('Service Worker Registered'))\n        .catch((err) => console.error('Service Worker Error:', err));\n}\n\n// Initialize App\nrenderTransactions();\n","module.exports = new __parcel__URL__(\"service-worker.016ce8d9.js\").toString();"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$6FvfU","$ilpIi","$6b17f08f738443dc$var$form","document","getElementById","$6b17f08f738443dc$var$descriptionInput","$6b17f08f738443dc$var$amountInput","$6b17f08f738443dc$var$categoryInput","$6b17f08f738443dc$var$transactionList","$6b17f08f738443dc$var$totalIncome","$6b17f08f738443dc$var$totalExpenses","$6b17f08f738443dc$var$balance","$6b17f08f738443dc$var$updateTransaction","description","amount","category","transactionRef","doc","db","updateDoc","date","Date","toISOString","alert","error","console","addEventListener","e","preventDefault","$6b17f08f738443dc$var$sanitizeInput","input","div","createElement","textContent","innerHTML","trim","value","parseFloat","addDoc","collection","log","reset","window","editTransaction","newDescription","prompt","newAmount","newCategory","isNaN","deleteTransaction","confirm","deleteDoc","$9b58f915dd881523$exports","$6b17f08f738443dc$var$sw","navigator","serviceWorker","href","scope","then","catch","onSnapshot","snapshot","income","expenses","forEach","data","li","appendChild"],"version":3,"file":"index.56d77c96.js.map"}